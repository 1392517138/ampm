{
  "version": 3,
  "sources": [
    "img/bg.png",
    "Submit.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "Submit",
    "Option",
    "props",
    "handleChangeTime",
    "val",
    "setState",
    "time",
    "handleUpload",
    "state",
    "fileList",
    "myFormData",
    "FormData",
    "uploading",
    "_this",
    "forEach",
    "file",
    "append",
    "axios",
    "post",
    "then",
    "res",
    "console",
    "log",
    "data",
    "code",
    "alert",
    "message",
    "document",
    "querySelector",
    "href",
    "innerHTML",
    "catch",
    "num",
    "currentTime",
    "times",
    "infoList",
    "this",
    "err",
    "onRemove",
    "index",
    "indexOf",
    "newFileList",
    "slice",
    "splice",
    "beforeUpload",
    "progress",
    "strokeColor",
    "strokeWidth",
    "format",
    "percent",
    "parseFloat",
    "toFixed",
    "className",
    "width",
    "height",
    "src",
    "require",
    "orientation",
    "header",
    "bordered",
    "dataSource",
    "renderItem",
    "item",
    "Item",
    "Text",
    "type",
    "UploadOutlined",
    "onClick",
    "disabled",
    "length",
    "loading",
    "style",
    "marginTop",
    "value",
    "multipartFile",
    "files",
    "Component",
    "ReactDOM",
    "render",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.fdd69667.chunk.js",
  "sourcesContent": [
    "module.exports = __webpack_public_path__ + \"static/media/bg.7c03641f.png\";",
    "import React, { Component } from 'react';\r\nimport './Submit.scss'\r\nimport axios from 'axios';\r\nimport { Upload, Button, message, Select, List, Typography, Divider } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\nclass Submit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            num: \"\",\r\n            file: \"\",\r\n            currentTime: '',\r\n            fileList: [],\r\n            times: '',\r\n            uploading: false,\r\n            infoList: [\r\n                '一个压缩文件，大小小于50m',\r\n                '压缩文件名：中文名-第x次，如皮文景-第二次',\r\n                '上传成功会以邮箱返回文件地址，请自己检查是否成功。失败请与管理员取得联系。']\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const _this = this;\r\n        axios.post('http://39.98.124.97:9002/client/getTiems').then((res)=>{\r\n            _this.setState({\r\n                times: res.data.data\r\n            })\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    handleChangeTime = (val) => {\r\n        this.setState({\r\n            time: val\r\n        })\r\n    }\r\n    handleUpload = () => {\r\n        const { fileList, time } = this.state;\r\n        const myFormData = new FormData();  \r\n        this.setState({\r\n            uploading: true\r\n        })\r\n        const _this = this\r\n        fileList.forEach(file => {\r\n            myFormData.append('multipartFile', file);\r\n        });\r\n\r\n\r\n      \r\n        axios.post(\"http://pmzhaoxin.p3wj.top:9002/client/uploadsFile\", myFormData)\r\n            .then(function (res) {\r\n                console.log(res)\r\n                if (res.data.code == \"10000\" || res.data.code == \"30000\") {\r\n                    alert(res.data.message)\r\n                    _this.setState({\r\n                        fileList: [],\r\n                        uploading: false,\r\n                    })\r\n                    document.querySelector(\".link\").href = res.data.data\r\n                    document.querySelector(\".link\").innerHTML = \"点击此处下载你的文件\"\r\n                } else {\r\n                    _this.setState({\r\n                        uploading: false,\r\n                    })\r\n                    alert(res.data.message)\r\n                }\r\n            })\r\n            .catch(function (res) {\r\n                console.log(res)\r\n                _this.setState({\r\n                    uploading: false\r\n                })\r\n                alert(\"提交失败！\" + res.data.code)\r\n            })\r\n\r\n    };\r\n\r\n    render() {\r\n        const { uploading, fileList, times } = this.state;\r\n        const props = {\r\n            onRemove: file => {\r\n                this.setState(state => {\r\n                    const index = state.fileList.indexOf(file);\r\n                    const newFileList = state.fileList.slice();\r\n                    newFileList.splice(index, 1);\r\n                    return {\r\n                        fileList: newFileList,\r\n                    };\r\n                });\r\n            },\r\n            beforeUpload: file => {\r\n                this.setState(state => ({\r\n                    fileList: [...state.fileList, file],\r\n                }));\r\n                return false;\r\n            },\r\n            fileList,\r\n            progress: {\r\n                strokeColor: {\r\n                    '0%': '#108ee9',\r\n                    '100%': '#87d068',\r\n                },\r\n                strokeWidth: 3,\r\n                format: percent => `${parseFloat(percent.toFixed(2))}%`,\r\n            },\r\n        };\r\n        return (\r\n            <div className=\"form-body\">\r\n                <img className='bg-img' width={380} height={160} src={require('./img/bg.png')}></img>\r\n              \r\n                <div className=\"submit_body\">\r\n\r\n\r\n                    <Divider orientation=\"center\"><span className='title'>产品平台作业第<span className='title-times'>{times}</span>次提交</span></Divider>\r\n                    <List\r\n                        header={<div>上传格式要求</div>}\r\n                        bordered\r\n                        dataSource={this.state.infoList}\r\n                        renderItem={(item,index)=> (\r\n                            <List.Item>\r\n                                <Typography.Text  type=\"secondary\">{`${index+1}、 `}</Typography.Text> {item}\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n               <Divider orientation=\"center\"></Divider>\r\n                    <Upload {...props}>\r\n                        <Button>\r\n                            <UploadOutlined /> 选择压缩文件\r\n                        </Button>\r\n                    </Upload>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={this.handleUpload}\r\n                        disabled={fileList.length === 0}\r\n                        loading={uploading}\r\n                        style={{ marginTop: 16 }}\r\n                    >\r\n                        {uploading ? '上传中' : '开始上传'}\r\n                    </Button>\r\n                    <Divider orientation=\"center\"></Divider>\r\n\r\n                    <a href=\"###\" className=\"link\"></a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n \r\n    file() {\r\n        console.log(document.querySelector(\".file\").value)\r\n        this.setState({\r\n            file: document.querySelector(\".file\").value\r\n        })\r\n    }\r\n\r\n    submitFile() {\r\n        let This = this\r\n        let myFormData = new FormData()\r\n        let multipartFile = document.querySelector('.file').files[0]\r\n        let times = document.querySelector('select').value\r\n   \r\n        myFormData.append(\"multipartFile\", multipartFile)\r\n        myFormData.append(\"times\", times)\r\n        //console.log(myFormData)\r\n        axios.post(\"http://39.98.124.97:9002/client/uploadsFile\", myFormData)\r\n            .then(function (res) {\r\n                console.log(res)\r\n                if (res.data.code == \"10000\" || res.data.code == \"30000\") {\r\n                    alert(res.data.message)\r\n                    document.querySelector(\".link\").href = res.data.data\r\n                    document.querySelector(\".link\").innerHTML = \"点击此处下载你的文件\"\r\n                } else {\r\n                    alert(res.data.message)\r\n                }\r\n            })\r\n            .catch(function (res) {\r\n                console.log(res)\r\n                alert(\"提交失败！\" + res.data.code)\r\n            })\r\n    }\r\n}\r\n\r\nexport default Submit;",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Submit from './Submit';\n\n\nReactDOM.render(\n  <Submit></Submit>\n  ,document.getElementById('root')\n);\n\n"
  ],
  "sourceRoot": ""
}